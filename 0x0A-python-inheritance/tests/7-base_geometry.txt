# ===============================================================
# Unit test for module 7-base_geometry
# ===============================================================

Import module:
	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Create class instance:
	>>> geometry = BaseGeometry()

Test 'area' method:
	>>> geometry.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

Correct input for 'integer_validator' method
	>>> geometry.integer_validator("explen", 5)

Tests for wrong inputs to 'integer_validator' method:
	>>> geometry.integer_validator("explen", "invalid")
	Traceback (most recent call last):
	...
	TypeError: explen must be an integer

	>>> geometry.integer_validator("explen", -2)
	Traceback (most recent call last):
	...
	ValueError: explen must be greater than 0

Module docstring:
	>>> m = __import__("7-base_geometry").__doc__
	>>> len(m) > 1
	True

Class docstring:
        >>> c = __import__("7-base_geometry").BaseGeometry.__doc__
        >>> len(c) > 1
        True

Method docstrings:
        >>> meth1 = __import__("7-base_geometry").BaseGeometry.area.__doc__
        >>> len(meth1) > 1
        True

	>>> meth2 = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
        >>> len(meth2) > 1
        True
