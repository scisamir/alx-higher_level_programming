The ``matrix_divided`` module
=============================

Using ``matrix_divided``
------------------------

``matrix_divided`` divides all elements of a matrix

First import it:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Non-matrix import:
	>>> matrix = 3
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix list containing neither an integer nor a float:
	>>> matrix = [[1, 2, "samir"], [2, 3, 4]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Non-equal size lists:
	>>> matrix = [[1, 2], [3, 4, 5]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

div as non-number:
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, "Samir"))
	Traceback (most recent call last):
		...
	TypeError: div must be a number

div as float:
	>>> print(matrix_divided(matrix, 3.0))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

div as zero (0):
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

div as an integer:
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Verify that original matrix was unchanged:
	>>> print(matrix)
	[[1, 2, 3], [4, 5, 6]]

matrix= list of lists of integers / div= float(inf):
	>>> print(matrix_divided(matrix, float("inf")))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Missing one argument:
	>>> print(matrix_divided(matrix))
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

Missing two argument:
	>>> print(matrix_divided())
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
